

let smdict={
    'Вычислительные системы, сети и телекоммуникации': ['Физические основы элементной базы компьютерной техники и средств передачи информации. ', 'Принципы работы технических устройств ИКТ.', 'Физические основы компьютерной техники и средств передачи информации, принципы работы технических устройств  ИКТ.', 'Основы архитектуры и процессов функционирования вычислительных систем, сетей и телекоммуникаций.', 'Сетевые протоколы.', 'Теоретические основы построения и функционирования операционных систем, их назначение и функции.', 'Назначение и виды ИКТ.', 'Топология: определение. Типовые топологии сетей.', 'Сети с коммутацией пакетов. Буферизация. Методы продвижения пакетов.', 'Многоуровневый подход к задаче сетевого взаимодействия. Понятие протокола и стека протоколов. Понятие открытой системы и ее преимущества.', 'Открытые системы. Модель OSI. Состав и общая характеристика. Уровни модели OSI.', 'Модель OSI. Физический, канальный и сетевой уровни. Характеристика и функции. Примеры протоколов из различных стеков.', 'Модель OSI. Транспортный, сеансовый, уровень представления и прикладной уровень. Характеристика и функции. Примеры протоколов из различных стеков.', 'Стек протоколов TCP/IP. Характеристика и состав. Отображение протоколов стека на модель OSI.', 'Типы адресов стека TCP/IP.', 'Формат IP-адреса. Классы IP-адресов. Маска.', 'Система доменных имен DNS. Иерархия имен. Схема работы.', ' Динамическое назначение IP-адресов. Алгоритм работы протокола DHCP.', ' Протоколы IP и ICMP. Схема и таблицы маршрутизации.', ' Протоколы TCP и UDP. Порты. Логическое соединение'], 
    'Базы данных': ['Основные определения реляционной модели данных', 'Понятие «отношения»', 'Реляционные ключи', 'Реляционная целостность', 'Реляционная алгебра: выборка, проекция, декартово произведение, присвоение, переименование. Примеры', 'Реляционная алгебра: объединение, разность, пересечение, деление. Примеры', 'Реляционная алгебра: соединение. Примеры', 'Реляционное исчисление кортежей. Кванторы существования и общности. Примеры', 'Реляционное исчисление кортежей. Выражения и формулы. Примеры', 'Запись операторов SQL', 'Оператор Select. Примеры простых запросов', 'Запросы с фильтрацией. Примеры', 'Сортировка результатов запросов. Примеры', 'Агрегирование данных. Примеры', 'Группировка результатов. Примеры', 'Подзапросы. Примеры', 'Многотабличные запросы', 'Ключевые слова exists, not exists', 'Комбинирование результатов запросов: union, intersect, except', 'Команды изменения данных: insert, update, delete', 'DDL-операторы: create table, alter table, drop table', 'Типы данных MS SQL Server', 'Модель «Сущность-связь». Типы сущностей, типы связей', 'Модель «Сущность-связь». Атрибуты', 'Модель «Сущность-связь». Сущности сильного и слабого типов. Структурные ограничения', ' Модель «Сущность-связь». Проблемы ER-моделирования', 'Избыточность данных и аномалии обработки данных', 'Функциональные зависимости. Аксиомы Армстронга', 'Ненормализованные отношения. Первая нормальная форма. Процесс flattering', 'Вторая нормальная форма. Теорема Хеза', 'Третья нормальная форма', 'Нормальная форма Бойса-Кодда', 'Четвертая нормальная форма', 'Пятая нормальная форма', 'Методология проектирования БД'], 
    'Информационные технологии': ['Профили открытых ИС, функциональные и технологические стандарты разработки программных комплексов.', 'Назначение и виды ИС.', 'Состав функциональных и обеспечивающих подсистем ИС.', 'Модели и процессы жизненного цикла ИС.', 'Стадии создания ИС.', 'Понятие, состав и структура информационных систем (ИС). Свойства ИС.', ' Классификация информационных систем. Модели жизненного цикла информационных систем.', 'Структурирование и формализация экономических документов.', 'Критериальная оценка функциональности ЭИС в виде паутинообразной модели', ' Основы построения диаграмм потоков данных в ЭИС.', ' Информационные технологии в управлении. Классификация информационных технологий в управлении. Области применения различных информационных технологий.', 'Кодирование экономической информации. Классификаторы экономической информации.', 'Этапы развития АИТ', 'Функциональная структура АИТ', 'Функциональные подсистемы АИТ', 'Обеспечивающие подсистемы АИТ', 'Классификация и кодирование информации', 'Логико-информационные модели', 'Матричная логико-информационная модель', 'Математические модели анализа информационных потоков', 'Разработка обобщенного алгоритма работы АИС'], 
    'Проектирование информационных систем.': ['Понятие и классификация экономических информационных систем (ЭИС). Функциональные и обеспечивающие подсистемы ЭИС.', 'Технология проектирования ЭИС: технологический процесс, технологическая операция проектирования ЭИС. Требования к технологии проектирования ЭИС.', 'Методология проектирования ЭИС. Классификация методов проектирования ЭИС. Классификация средства проектирования ЭИС.', 'Жизненный цикл ЭИС. Модели жизненного цикла ЭИС. Стандарты, регламентирующие жизненный цикл программного обеспечения ИС.', 'Состав стадий и этапов канонического проектирования ИС. ', 'Каноническое проектирование ИС: состав и содержание работ процесса разработки ИС.', 'Понятие и основные системы кодирования экономической информации. Состав и содержание операций проектирования классификаторов.', 'Понятие Единой системы классификации и кодирования (ЕСКК). Технология использования штрихового кодирования информации.', 'Понятие Унифицированной системы документации. ', 'Понятие электронного документа и электронной технологии обработки.', 'Понятие информационной базы и способы ее организации.', 'Основные понятия и классификация технологического процесса обработки данных.', 'Понятие и классификация методов типового проектирования.', 'Case-средства для моделирования деловых процессов. Этапы построения модели IDEF0.', 'Процесс моделирования данных. Метод IDEF1. Этапы создания логической и физической моделей данных с помощью ERwin.', 'Общая структура организации работ по проектированию ИС. '], 
    'Программная инженерия': ['Характеристики методологий проектирования программного обеспечения (ПО). ', 'Классическая модель разработки ПО: модификации модели, жизненный цикл, достоинства и недостатки.', 'Прототипирование в процессе разработки ПО. Технологии быстрого прототипирования.', 'Инкрементная модель, спиральная модель разработки ПО: жизненный цикл, достоинства и недостатки.', 'Методология быстрой разработки приложений (RAD).', 'Методология RUP: жизненный цикл, артефакты.', 'Методология экстремального программирования (XP).', 'Методология SCRUM.', 'Инженерия требований: определение, свойства, виды, ограничения. ', 'Разработка требований.', 'Документирование и организация требований.', 'Планирование и управление требованиями.', 'Управление ресурсами в программных проектах.', 'Управление программными проектами.', 'Управление рисками в программных проектах.', 'Системы управления дефектами в программных проектах.', 'Контроль версий в программных проектах.', 'Сборка и выпуск программных проектов.', 'Качество программного обеспечения.']}
    function getRandom(arr, n) {
        var result = new Array(n),
            len = arr.length,
            taken = new Array(len);
        if (n > len)
            return Object.keys(smdict)
        while (n--) {
            var x = Math.floor(Math.random() * len);
            result[n] = arr[x in taken ? taken[x] : x];
            taken[x] = --len;
        }
        return result;
    }
    function getTicket(){
        document.getElementById("lab").innerHTML=""
        try{
        if(smdict["Базы данных"].length>0){
        var result=getRandom(Object.keys(smdict), 2)
        result.push("Базы данных")}
        else{
            var result=getRandom(Object.keys(smdict), 3)
        }}
        catch{
            var result=getRandom(Object.keys(smdict), 3)
        }
        result.forEach(function(entry, n){
            res=getRandom(smdict[entry], 1)
            document.getElementById("lab").innerHTML+=String(n+1)+": "+res+"<br><br>"
            ind=smdict[entry].indexOf(res)
            smdict[entry].splice(ind, 1)
            if(smdict[entry].length==0){
                delete smdict[entry]
            }
        }
        );
    }
